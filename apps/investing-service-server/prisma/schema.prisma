datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Wallet {
  balance   Float?
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model Share {
  createdAt    DateTime      @default(now())
  id           String        @id @default(cuid())
  name         String?
  portfolios   Portfolio[]
  price        Float?
  transactions Transaction[]
  updatedAt    DateTime      @updatedAt
}

model Transaction {
  amount    Int?
  createdAt DateTime                  @default(now())
  id        String                    @id @default(cuid())
  price     Float?
  share     Share?                    @relation(fields: [shareId], references: [id])
  shareId   String?
  typeField EnumTransactionTypeField?
  updatedAt DateTime                  @updatedAt
  user      User?                     @relation(fields: [userId], references: [id])
  userId    String?
}

model Portfolio {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  quantity  Int?
  share     Share?   @relation(fields: [shareId], references: [id])
  shareId   String?
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model User {
  createdAt    DateTime      @default(now())
  email        String?       @unique
  firstName    String?
  id           String        @id @default(cuid())
  lastName     String?
  password     String
  portfolios   Portfolio[]
  roles        Json
  transactions Transaction[]
  updatedAt    DateTime      @updatedAt
  username     String        @unique
  wallets      Wallet[]
}

enum EnumTransactionTypeField {
  Option1
}
